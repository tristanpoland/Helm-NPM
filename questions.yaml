categories:
- Web Server
- Reverse Proxy
- SSL/TLS

rancher_min_version: 2.6.0

questions:
# Basic Configuration
- variable: replicaCount
  default: 1
  description: "Number of replicas to deploy"
  type: int
  min: 1
  max: 10
  label: "Replica Count"
  group: "Basic Configuration"

- variable: image.tag
  default: ""
  description: "Docker image tag (leave empty for chart appVersion)"
  type: string
  label: "Image Tag"
  group: "Basic Configuration"

# Service Configuration
- variable: service.type
  default: "ClusterIP"
  description: "Service type for internal cluster communication"
  type: enum
  options:
    - "ClusterIP"
    - "LoadBalancer"
  label: "Service Type"
  group: "Service Configuration"

- variable: service.hostPort.enabled
  default: true
  description: "Enable hostPort for direct access on nodes (allows ports 80, 81, 443)"
  type: boolean
  label: "Enable Host Port Binding"
  group: "Service Configuration"
  subquestions:
  - variable: service.hostPort.http
    default: 80
    description: "Host port for HTTP access"
    type: int
    min: 1
    max: 65535
    label: "HTTP Host Port"
  - variable: service.hostPort.https
    default: 443
    description: "Host port for HTTPS access"
    type: int
    min: 1
    max: 65535
    label: "HTTPS Host Port"
  - variable: service.hostPort.admin
    default: 81
    description: "Host port for admin interface access"
    type: int
    min: 1
    max: 65535
    label: "Admin Host Port"

- variable: service.admin.enabled
  default: true
  description: "Enable separate admin service"
  type: boolean
  label: "Enable Admin Service"
  group: "Service Configuration"

# Ingress Configuration
- variable: ingress.enabled
  default: false
  description: "Enable ingress for external access"
  type: boolean
  label: "Enable Ingress"
  group: "Ingress Configuration"

- variable: ingress.className
  default: ""
  description: "Ingress class name"
  type: string
  label: "Ingress Class"
  group: "Ingress Configuration"
  show_if: "ingress.enabled=true"

- variable: ingress.hosts[0].host
  default: "nginx-proxy-manager.local"
  description: "Primary hostname for ingress"
  type: hostname
  label: "Ingress Hostname"
  group: "Ingress Configuration"
  show_if: "ingress.enabled=true"

# Storage Configuration
- variable: persistence.data.enabled
  default: true
  description: "Enable persistent storage for application data"
  type: boolean
  label: "Enable Data Persistence"
  group: "Storage Configuration"
  subquestions:
  - variable: persistence.data.size
    default: "10Gi"
    description: "Size of persistent volume for data"
    type: string
    label: "Data Volume Size"
  - variable: persistence.data.storageClass
    default: ""
    description: "Storage class for data volume (leave empty for default)"
    type: storageclass
    label: "Data Storage Class"

- variable: persistence.letsencrypt.enabled
  default: true
  description: "Enable persistent storage for Let's Encrypt certificates"
  type: boolean
  label: "Enable SSL Certificate Persistence"
  group: "Storage Configuration"
  subquestions:
  - variable: persistence.letsencrypt.size
    default: "1Gi"
    description: "Size of persistent volume for SSL certificates"
    type: string
    label: "SSL Certificate Volume Size"
  - variable: persistence.letsencrypt.storageClass
    default: ""
    description: "Storage class for SSL certificate volume (leave empty for default)"
    type: storageclass
    label: "SSL Certificate Storage Class"

# Database Configuration
- variable: postgresql.enabled
  default: true
  description: "Enable built-in PostgreSQL database (recommended for HA)"
  type: boolean
  label: "Enable Built-in PostgreSQL"
  group: "Database Configuration"
  subquestions:
  - variable: postgresql.auth.username
    default: "nginxpm"
    description: "PostgreSQL username"
    type: string
    label: "PostgreSQL Username"
  - variable: postgresql.auth.password
    default: "nginxpm123"
    description: "PostgreSQL password"
    type: password
    label: "PostgreSQL Password"
  - variable: postgresql.auth.database
    default: "nginxpm"
    description: "PostgreSQL database name"
    type: string
    label: "PostgreSQL Database"
  - variable: postgresql.persistence.enabled
    default: true
    description: "Enable persistent storage for PostgreSQL"
    type: boolean
    label: "Enable PostgreSQL Persistence"
  - variable: postgresql.persistence.size
    default: "8Gi"
    description: "Size of PostgreSQL persistent volume"
    type: string
    label: "PostgreSQL Volume Size"
    show_if: "postgresql.persistence.enabled=true"
  - variable: postgresql.persistence.storageClass
    default: ""
    description: "Storage class for PostgreSQL volume (leave empty for default)"
    type: storageclass
    label: "PostgreSQL Storage Class"
    show_if: "postgresql.persistence.enabled=true"

- variable: database.type
  default: ""
  description: "External database type (only if built-in PostgreSQL is disabled)"
  type: enum
  options:
    - ""
    - "mysql"
    - "mariadb"
    - "postgres"
  label: "External Database Type"
  group: "Database Configuration"
  show_if: "postgresql.enabled=false"
  subquestions:
  - variable: database.host
    default: ""
    description: "Database host"
    type: hostname
    label: "Database Host"
  - variable: database.port
    default: ""
    description: "Database port"
    type: string
    label: "Database Port"
  - variable: database.name
    default: ""
    description: "Database name"
    type: string
    label: "Database Name"
  - variable: database.user
    default: ""
    description: "Database username"
    type: string
    label: "Database Username"
  - variable: database.password
    default: ""
    description: "Database password"
    type: password
    label: "Database Password"

# Resources Configuration
- variable: resources.requests.cpu
  default: ""
  description: "CPU resource requests"
  type: string
  label: "CPU Requests"
  group: "Resources"

- variable: resources.requests.memory
  default: ""
  description: "Memory resource requests"
  type: string
  label: "Memory Requests"
  group: "Resources"

- variable: resources.limits.cpu
  default: ""
  description: "CPU resource limits"
  type: string
  label: "CPU Limits"
  group: "Resources"

- variable: resources.limits.memory
  default: ""
  description: "Memory resource limits"
  type: string
  label: "Memory Limits"
  group: "Resources"