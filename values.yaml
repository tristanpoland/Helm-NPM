# Default values for nginx-proxy-manager.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: jc21/nginx-proxy-manager
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: NodePort
  port: 80
  httpsPort: 443
  adminPort: 81
  # NodePort configuration (only used when type is NodePort)
  nodePort: 80    # HTTP access on any node IP
  httpsNodePort: 443  # HTTPS access on any node IP
  adminNodePort: 81   # Admin access on any node IP
  admin:
    enabled: true
    type: NodePort
    port: 81
    nodePort: 81    # Admin access on any node IP

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Persistence configuration
persistence:
  data:
    enabled: true
    size: 10Gi
    accessModes:
      - ReadWriteOnce
    # storageClass: ""
  letsencrypt:
    enabled: true
    size: 1Gi
    accessModes:
      - ReadWriteOnce
    # storageClass: ""

# Database configuration
database:
  # Database type: mysql, mariadb, postgres
  type: ""
  host: ""
  port: ""
  name: ""
  user: ""
  password: ""

# Existing secret to use for database password
existingSecret: ""

# Configuration
config:
  enabled: false
  data: {}

# Environment variables
env: []

# Additional volumes
volumes: []

# Additional volume mounts
volumeMounts: []

# Rancher-specific configuration
rancher:
  # Rancher project namespace
  projectId: ""
  # Enable Rancher monitoring integration
  monitoring:
    enabled: false
  # Rancher cattle annotations
  cattle:
    # Source repository type for Rancher UI
    sourceRepoType: "cluster"
    # Source repository name
    sourceRepo: "rancher-charts"
  # Global registry override for Rancher environments
  systemDefaultRegistry: ""