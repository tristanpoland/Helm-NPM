apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nginx-proxy-manager.fullname" . }}
  labels:
    {{- include "nginx-proxy-manager.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "nginx-proxy-manager.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "nginx-proxy-manager.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "nginx-proxy-manager.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
              {{- if .Values.service.hostPort.enabled }}
              hostPort: {{ .Values.service.hostPort.http }}
              {{- end }}
            - name: https
              containerPort: 443
              protocol: TCP
              {{- if .Values.service.hostPort.enabled }}
              hostPort: {{ .Values.service.hostPort.https }}
              {{- end }}
            - name: admin
              containerPort: 81
              protocol: TCP
              {{- if .Values.service.hostPort.enabled }}
              hostPort: {{ .Values.service.hostPort.admin }}
              {{- end }}
          env:
            {{- if .Values.postgresql.enabled }}
            # Built-in PostgreSQL configuration
            - name: DB_TYPE
              value: "postgres"
            - name: DB_HOST
              value: "{{ include "nginx-proxy-manager.fullname" . }}-postgresql"
            - name: DB_PORT
              value: "5432"
            - name: DB_NAME
              value: {{ .Values.postgresql.auth.database | quote }}
            - name: DB_USER
              value: {{ .Values.postgresql.auth.username | quote }}
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ include "nginx-proxy-manager.fullname" . }}-postgresql
                  key: postgres-password
            {{- else if .Values.database.type }}
            # External database configuration
            - name: DB_TYPE
              value: {{ .Values.database.type | quote }}
            {{- if .Values.database.host }}
            - name: DB_HOST
              value: {{ .Values.database.host | quote }}
            {{- end }}
            {{- if .Values.database.port }}
            - name: DB_PORT
              value: {{ .Values.database.port | quote }}
            {{- end }}
            {{- if .Values.database.name }}
            - name: DB_NAME
              value: {{ .Values.database.name | quote }}
            {{- end }}
            {{- if .Values.database.user }}
            - name: DB_USER
              value: {{ .Values.database.user | quote }}
            {{- end }}
            {{- if .Values.database.password }}
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ include "nginx-proxy-manager.secretName" . }}
                  key: database-password
            {{- end }}
            {{- end }}
            {{- with .Values.env }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          volumeMounts:
            - name: data
              mountPath: /data
            - name: letsencrypt
              mountPath: /etc/letsencrypt
            {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          livenessProbe:
            httpGet:
              path: /
              port: admin
            initialDelaySeconds: 30
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /
              port: admin
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: data
          {{- if .Values.persistence.data.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "nginx-proxy-manager.fullname" . }}-data
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: letsencrypt
          {{- if .Values.persistence.letsencrypt.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "nginx-proxy-manager.fullname" . }}-letsencrypt
          {{- else }}
          emptyDir: {}
          {{- end }}
        {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}